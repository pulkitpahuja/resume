{"version":3,"sources":["posts/modern-ux-with-react-server-components.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"yGACA,wMAEO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,IAAI,KAAO,MAAO,MAAQ,KAM9EC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,qBAAK,qDAA+C,iBAAGC,WAAW,IAC9D,KAAQ,uFACL,4CAAgD,gKACvD,qBAAK,0HACL,kBACE,GAAM,2BACH,2BACL,qBAAK,wDACL,qBAAK,4EAA2E,0BAAYA,WAAW,KAAM,cAA2B,sIAExI,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,snEAGhB,kBACE,GAAM,2BACH,2BACL,qBAAK,4FACL,qBAAK,6EAA4E,0BAAYA,WAAW,KAAM,cAA2B,2GAEzI,qBAAK,sNAEL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,izCAGhB,kBACE,GAAM,gCACH,gCACL,qBAAK,6FACL,qBAAK,sLACyD,0BAAYA,WAAW,KAAM,cAA2B,kEACtH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,mgFAGhB,qBAAK,kJACL,qBAAK,+PAEL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,8jDAGhB,kBACE,GAAM,WACH,WACL,qBAAK,6GACL,sBACE,kBAAIA,WAAW,MAAO,6JACtB,kBAAIA,WAAW,MAAO,2LAExB,kBACE,GAAM,gBACH,gBACL,qBAAK,4QAEL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,2uFAGhB,qBAAK,iLACL,qBAAK,2HACL,kBACE,GAAM,cACH,cACL,qBAAK,0OAEL,qBAAK,sGACL,qBAAK,WAAU,iBAAGA,WAAW,IACzB,KAAQ,uFACL,sCAA0C,+BAA8B,iBAAGA,WAAW,IACzF,KAAQ,qDACL,iBAAqB,MAKhCJ,EAAWK,gBAAiB,EACrB,MAAMC,EAAkB,CAACL,EAAW,KAAO,CAChD,CACEM,GAAI,0BACJC,MAAO,EACPC,MAAO,0BACPC,SAAU,IAId,CACIH,GAAI,0BACJC,MAAO,EACPC,MAAO,0BACPC,SAAU,IAId,CACIH,GAAI,+BACJC,MAAO,EACPC,MAAO,+BACPC,SAAU,IAId,CACIH,GAAI,UACJC,MAAO,EACPC,MAAO,UACPC,SAAU,IAId,CACIH,GAAI,eACJC,MAAO,EACPC,MAAO,eACPC,SAAU,IAId,CACIH,GAAI,aACJC,MAAO,EACPC,MAAO,aACPC,SAAU,KAMDC,EAAc,CACzB,KAAQ,yCACR,MAAS,yCACT,YAAe,uMACf,OAAU,6CACV,kBAAqB,yDACrB,UAAa,sFACb,KAAQ,CACN,cACA,YACA,SAEF,KAAQ,2BACR,SAAY","file":"static/js/20.37796ae7.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.7,\"time\":222000,\"words\":740}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Earlier this week, Facebook’s React revealed `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html\"\n      }}>{`Zero-Bundle-Size React Server Components`}</a>{`, which allow you to selectively move components to the back-end, aiming to improve bundle size and initial responsiveness, creating a tidy user experience.`}</p>\n    <p>{`This enables modern UX for server-driven applications, shifting the mental model of how modern applications are built.`}</p>\n    <h2 {...{\n      \"id\": \"rendering-on-the-client\"\n    }}>{`Rendering on the Client`}</h2>\n    <p>{`Client components have not changed with this update.`}</p>\n    <p>{`However, you can explicitly render components on the client by appending `}<inlineCode parentName=\"p\">{`.client.js`}</inlineCode>{` to their respective files.\nThis tells React to not render them on the server, should they ever cross paths (more on this later).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Counter.client.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Counter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> initialCount <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>initialCount<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"rendering-on-the-server\"\n    }}>{`Rendering on the Server`}</h2>\n    <p>{`As described by their name, server components render behind-the-scenes, on the back-end.`}</p>\n    <p>{`You can indicate server components to React by appending their files with `}<inlineCode parentName=\"p\">{`.server.js`}</inlineCode>{`.\nThis tells React that these components should render on the server to later serialize to the client.`}</p>\n    <p>{`A practical application of server components is rendering heavy dependencies and components on the server.\nThis removes the burden on bundle size and initial paint time, improving responsiveness on the client.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Won't appear in bundle</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useHeavyMethod <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'heavyDependency'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ServerComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useHeavyMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>data<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"code-splitting-on-the-server\"\n    }}>{`Code-Splitting on the Server`}</h2>\n    <p>{`Another practical application of server components replaces the old code-splitting model.`}</p>\n    <p>{`It’s a good practice to break down your bundle into smaller bundles to lazily serve to the client as needed.\nPrior to server-components, this would be accomplished with the `}<inlineCode parentName=\"p\">{`React.lazy`}</inlineCode>{` method, creating breakpoints to be served often when routing.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Client-side code-splitting by lazily-loading</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> lazy <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> DefaultComponent <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lazy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./DefaultComponent.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> AlternateComponent <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">lazy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./AlternateComponent.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ClientComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> alternate <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>alternate<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">AlternateComponent</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">DefaultComponent</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Lazily loading requires splitting imports with dynamic imports and leaves a nasty impression on initial interaction, tainting user experience.`}</p>\n    <p>{`Server components solve this by treating all imports as possible code-splitting points, enabling the developer to choose the order of which components are used.\nThis allows the client to fetch and use components much earlier than traditional methods.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Server-side code-splitting by default</span>\\n<span class=\\\"token keyword\\\">import</span> DefaultComponent <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./DefaultComponent.client.js'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> AlternateComponent <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./AlternateComponent.client.js'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ServerComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> alternate <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>alternate<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">AlternateComponent</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">DefaultComponent</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"caveats\"\n    }}>{`Caveats`}</h2>\n    <p>{`However, server components do not replace server-side rendering (SSR) and have some caveats of their own:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Server components cannot render interactive components, forgoing hooks and events, and browser APIs. This leaves the burden of interaction to the client.`}</li>\n      <li parentName=\"ul\">{`Server components cannot pass props that cannot serialize over a network such as JSON. This means that functions and other complex data cannot transfer from the server to the client.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"mixing-it-up\"\n    }}>{`Mixing it Up`}</h2>\n    <p>{`Server components cannot take advantage of functional props or advanced state, leaving that to the client.\nHowever, you can still use client components with server components to add back this interaction — they just won’t render on the server.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// Counter.server.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useHeavyMethod <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'heavyDependency'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ClientCounter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter.client.js'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ServerComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> initialCount <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useHeavyMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter-wrapper<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Initial Count: </span><span class=\\\"token punctuation\\\">{</span>initialCount<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ClientCounter</span></span> <span class=\\\"token attr-name\\\">initialCount</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>initialCount<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`One thing to note here is that you can import and use client components within server components, but you cannot do the same with server components inside client components.`}</p>\n    <p>{`You can still pass server components as children to client components, but only within the scope of a server component.`}</p>\n    <h2 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h2>\n    <p>{`React server components empower developers to create lighter and tidier experiences by moving components off of the front-end runtime.\nThis completely changes the way that we work across front and back ends, treating them as one.`}</p>\n    <p>{`I am excited to see where this goes as Facebook continue research and development on this feature.`}</p>\n    <p>{`You can `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html\"\n      }}>{`learn more about server components`}</a>{` and play around with their `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/reactjs/server-components-demo\"\n      }}>{`official demo`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"rendering-on-the-client\",\n    level: 2,\n    title: \"Rendering on the Client\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"rendering-on-the-server\",\n    level: 2,\n    title: \"Rendering on the Server\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"code-splitting-on-the-server\",\n    level: 2,\n    title: \"Code-Splitting on the Server\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"caveats\",\n    level: 2,\n    title: \"Caveats\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"mixing-it-up\",\n    level: 2,\n    title: \"Mixing it Up\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"conclusion\",\n    level: 2,\n    title: \"Conclusion\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {\n  \"slug\": \"modern-ux-with-react-server-components\",\n  \"title\": \"Modern UX with React Server Components\",\n  \"description\": \"Earlier this week, Facebook's React revealed Zero-Bundle-Size React Server Components, promising lower bundle sizes and paint times, shifting the mental model of how modern applications are built.\",\n  \"banner\": \"modern-ux-with-react-server-components.jpg\",\n  \"bannerPlaceholder\": \"modern-ux-with-react-server-components-placeholder.jpg\",\n  \"bannerAlt\": \"An image depicting a React-powered web server and a fast application on a computer.\",\n  \"tags\": [\n    \"development\",\n    \"fullstack\",\n    \"react\"\n  ],\n  \"date\": \"2020-12-24T00:00:00.000Z\",\n  \"readTime\": \"00:03:00:00\"\n}\n\n"],"sourceRoot":""}