(this.webpackJsonpportfolio=this.webpackJsonpportfolio||[]).push([[20],{193:function(n,s,a){"use strict";a.r(s),a.d(s,"readingTime",(function(){return e})),a.d(s,"default",(function(){return p})),a.d(s,"tableOfContents",(function(){return c})),a.d(s,"frontMatter",(function(){return l}));a(0);var t=a(85);const e={text:"4 min read",minutes:3.7,time:222e3,words:740},o={};function p({components:n,...s}){return Object(t.b)("wrapper",Object.assign({},o,s,{components:n,mdxType:"MDXLayout"}),Object(t.b)("p",null,"Earlier this week, Facebook\u2019s React revealed ",Object(t.b)("a",{parentName:"p",href:"https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html"},"Zero-Bundle-Size React Server Components"),", which allow you to selectively move components to the back-end, aiming to improve bundle size and initial responsiveness, creating a tidy user experience."),Object(t.b)("p",null,"This enables modern UX for server-driven applications, shifting the mental model of how modern applications are built."),Object(t.b)("h2",{id:"rendering-on-the-client"},"Rendering on the Client"),Object(t.b)("p",null,"Client components have not changed with this update."),Object(t.b)("p",null,"However, you can explicitly render components on the client by appending ",Object(t.b)("inlineCode",{parentName:"p"},".client.js")," to their respective files.\nThis tells React to not render them on the server, should they ever cross paths (more on this later)."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Counter.client.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> initialCount <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialCount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("h2",{id:"rendering-on-the-server"},"Rendering on the Server"),Object(t.b)("p",null,"As described by their name, server components render behind-the-scenes, on the back-end."),Object(t.b)("p",null,"You can indicate server components to React by appending their files with ",Object(t.b)("inlineCode",{parentName:"p"},".server.js"),".\nThis tells React that these components should render on the server to later serialize to the client."),Object(t.b)("p",null,"A practical application of server components is rendering heavy dependencies and components on the server.\nThis removes the burden on bundle size and initial paint time, improving responsiveness on the client."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Won\'t appear in bundle</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useHeavyMethod <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'heavyDependency\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ServerComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useHeavyMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("h2",{id:"code-splitting-on-the-server"},"Code-Splitting on the Server"),Object(t.b)("p",null,"Another practical application of server components replaces the old code-splitting model."),Object(t.b)("p",null,"It\u2019s a good practice to break down your bundle into smaller bundles to lazily serve to the client as needed.\nPrior to server-components, this would be accomplished with the ",Object(t.b)("inlineCode",{parentName:"p"},"React.lazy")," method, creating breakpoints to be served often when routing."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Client-side code-splitting by lazily-loading</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> lazy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> DefaultComponent <span class="token operator">=</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'./DefaultComponent.js\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> AlternateComponent <span class="token operator">=</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'./AlternateComponent.js\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ClientComponent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> alternate <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>alternate<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AlternateComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("p",null,"Lazily loading requires splitting imports with dynamic imports and leaves a nasty impression on initial interaction, tainting user experience."),Object(t.b)("p",null,"Server components solve this by treating all imports as possible code-splitting points, enabling the developer to choose the order of which components are used.\nThis allows the client to fetch and use components much earlier than traditional methods."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Server-side code-splitting by default</span>\n<span class="token keyword">import</span> DefaultComponent <span class="token keyword">from</span> <span class="token string">\'./DefaultComponent.client.js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> AlternateComponent <span class="token keyword">from</span> <span class="token string">\'./AlternateComponent.client.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ServerComponent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> alternate <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>alternate<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AlternateComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultComponent</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("h2",{id:"caveats"},"Caveats"),Object(t.b)("p",null,"However, server components do not replace server-side rendering (SSR) and have some caveats of their own:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"Server components cannot render interactive components, forgoing hooks and events, and browser APIs. This leaves the burden of interaction to the client."),Object(t.b)("li",{parentName:"ul"},"Server components cannot pass props that cannot serialize over a network such as JSON. This means that functions and other complex data cannot transfer from the server to the client.")),Object(t.b)("h2",{id:"mixing-it-up"},"Mixing it Up"),Object(t.b)("p",null,"Server components cannot take advantage of functional props or advanced state, leaving that to the client.\nHowever, you can still use client components with server components to add back this interaction\u200a\u2014\u200athey just won\u2019t render on the server."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// Counter.server.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useHeavyMethod <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'heavyDependency\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ClientCounter <span class="token keyword">from</span> <span class="token string">\'./Counter.client.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ServerComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> initialCount <span class="token operator">=</span> <span class="token function">useHeavyMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>counter-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">Initial Count: </span><span class="token punctuation">{</span>initialCount<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ClientCounter</span></span> <span class="token attr-name">initialCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>initialCount<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("p",null,"One thing to note here is that you can import and use client components within server components, but you cannot do the same with server components inside client components."),Object(t.b)("p",null,"You can still pass server components as children to client components, but only within the scope of a server component."),Object(t.b)("h2",{id:"conclusion"},"Conclusion"),Object(t.b)("p",null,"React server components empower developers to create lighter and tidier experiences by moving components off of the front-end runtime.\nThis completely changes the way that we work across front and back ends, treating them as one."),Object(t.b)("p",null,"I am excited to see where this goes as Facebook continue research and development on this feature."),Object(t.b)("p",null,"You can ",Object(t.b)("a",{parentName:"p",href:"https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html"},"learn more about server components")," and play around with their ",Object(t.b)("a",{parentName:"p",href:"https://github.com/reactjs/server-components-demo"},"official demo"),"."))}p.isMDXComponent=!0;const c=(n={})=>[{id:"rendering-on-the-client",level:2,title:"Rendering on the Client",children:[]},{id:"rendering-on-the-server",level:2,title:"Rendering on the Server",children:[]},{id:"code-splitting-on-the-server",level:2,title:"Code-Splitting on the Server",children:[]},{id:"caveats",level:2,title:"Caveats",children:[]},{id:"mixing-it-up",level:2,title:"Mixing it Up",children:[]},{id:"conclusion",level:2,title:"Conclusion",children:[]}],l={slug:"modern-ux-with-react-server-components",title:"Modern UX with React Server Components",description:"Earlier this week, Facebook's React revealed Zero-Bundle-Size React Server Components, promising lower bundle sizes and paint times, shifting the mental model of how modern applications are built.",banner:"modern-ux-with-react-server-components.jpg",bannerPlaceholder:"modern-ux-with-react-server-components-placeholder.jpg",bannerAlt:"An image depicting a React-powered web server and a fast application on a computer.",tags:["development","fullstack","react"],date:"2020-12-24T00:00:00.000Z",readTime:"00:03:00:00"}}}]);
//# sourceMappingURL=20.37796ae7.chunk.js.map