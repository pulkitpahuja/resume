(this.webpackJsonpportfolio=this.webpackJsonpportfolio||[]).push([[19],{192:function(n,s,a){"use strict";a.r(s),a.d(s,"readingTime",(function(){return e})),a.d(s,"default",(function(){return o})),a.d(s,"tableOfContents",(function(){return c})),a.d(s,"frontMatter",(function(){return u}));a(0);var t=a(85);const e={text:"4 min read",minutes:3.885,time:233100,words:777},p={};function o({components:n,...s}){return Object(t.b)("wrapper",Object.assign({},p,s,{components:n,mdxType:"MDXLayout"}),Object(t.b)("p",null,"Motion design is a critical component of user experience, but not all enjoy animations equally."),Object(t.b)("p",null,"It is estimated that up to 35% of adults 40+ in the US have suffered from some form of vestibular dysfunction ",Object(t.b)("a",{parentName:"p",href:"https://vestibular.org/understanding-vestibular-disorder"},"(source)"),".\nFor these people, motion can trigger physical symptoms like nausea, dizziness, and malaise."),Object(t.b)("p",null,"Operating systems offer a solution to this: users can opt-out of animations. The setting is meant primarily for the operating system, but websites and web applications can take advantage of it."),Object(t.b)("p",null,"For a few years now, various operating systems have been letting users opt-out of animations, typically within accessibility settings:"),Object(t.b)("p",null,Object(t.b)("img",{parentName:"p",src:"windows-settings.jpg",alt:"Windows settings showing the option to disable animation."})),Object(t.b)("p",null,"When animations are disabled, all motion is reduced across the operating system.\nThis setting is exposed to our browsers using a media query, ",Object(t.b)("inlineCode",{parentName:"p"},"prefers-reduced-motion"),".\nThis way, websites can read and respect the same settings to disable animations."),Object(t.b)("h2",{id:"css-implementation"},"CSS Implementation"),Object(t.b)("p",null,"Animations can be disabled in CSS using a media query:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-css","data-language":"css","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token selector">*,\n*::before,\n*::after</span> <span class="token punctuation">{</span>\n  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-reduced-motion</span><span class="token punctuation">:</span> reduce<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 0s <span class="token important">!important</span><span class="token punctuation">;</span>\n    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0s <span class="token important">!important</span><span class="token punctuation">;</span>\n    <span class="token property">transition-duration</span><span class="token punctuation">:</span> 0s <span class="token important">!important</span><span class="token punctuation">;</span>\n    <span class="token property">transition-delay</span><span class="token punctuation">:</span> 0s <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("p",null,"By default, ",Object(t.b)("inlineCode",{parentName:"p"},"no-preference")," is the default value for those who opt-in animations and ",Object(t.b)("inlineCode",{parentName:"p"},"reduce")," for those who opt-out."),Object(t.b)("p",null,"Although animations go from animated to still this way, a better mindset is to start from a still experience and enable motion conditionally:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-css","data-language":"css","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token selector">.example</span> <span class="token punctuation">{</span>\n  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.example:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>20px<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-reduced-motion</span><span class="token punctuation">:</span> no-preference<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n  <span class="token selector">.example</span> <span class="token punctuation">{</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token property">transform</span><span class="token punctuation">:</span> 200ms<span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("p",null,"By ensuring that the transition is set from within a media query, the animation is disabled by default for users on browsers that don\u2019t support this property.\nBrowsers ignore CSS inside unrecognized media queries, so this transition doesn\u2019t apply for them."),Object(t.b)("h2",{id:"javascript-hook"},"JavaScript Hook"),Object(t.b)("p",null,"The media queries work great for CSS animations, but we\u2019ll need a solution for JavaScript animations and transitions.\nBecause this feature is implemented as a media query, it can be accessed the same way we access any media query values in JavaScript by using ",Object(t.b)("inlineCode",{parentName:"p"},"window.matchMedia"),":"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> useMemo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">usePrefersReducedMotion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> mediaQuery <span class="token operator">=</span> window<span class="token punctuation">.</span>matchMedia<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token string">\'(prefers-reduced-motion: reduce)\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> reduceMotion <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> mediaQuery<span class="token operator">?.</span>matches<span class="token punctuation">,</span> <span class="token punctuation">[</span>mediaQuery<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> reduceMotion<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("p",null,"This listener will fire when the user toggles the ",Object(t.b)("inlineCode",{parentName:"p"},"reduce motion")," settings in their operating system."),Object(t.b)("p",null,"We want to listen for this event because we want to immediately halt animations if the user toggles this setting, even if the page has already loaded / the animation is in progress."),Object(t.b)("h2",{id:"javascript-implementation"},"JavaScript Implementation"),Object(t.b)("p",null,"Here\u2019s how we would use the hook with ",Object(t.b)("a",{parentName:"p",href:"https://threejs.org"},"three.js"),", a 3D rendering library that I frequently combine this with:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  WebGLRenderer<span class="token punctuation">,</span>\n  PerspectiveCamera<span class="token punctuation">,</span>\n  Scene<span class="token punctuation">,</span>\n  BoxGeometry<span class="token punctuation">,</span>\n  MeshNormalMaterial<span class="token punctuation">,</span>\n  Mesh<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'three\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> usePrefersReducedMotion <span class="token keyword">from</span> <span class="token string">\'./hooks/prefersReducedMotion\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">AccessibleCube</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> prefersReducedMotion <span class="token operator">=</span> <span class="token function">usePrefersReducedMotion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Setup scene</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> innerWidth<span class="token punctuation">,</span> innerHeight <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">;</span>\n\n    <span class="token comment">// Initialize renderer to work over our canvas</span>\n    renderer<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> canvas<span class="token operator">:</span> canvas<span class="token punctuation">.</span>current <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    renderer<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">setPixelRatio</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    renderer<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>innerWidth<span class="token punctuation">,</span> innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Initialize camera</span>\n    camera<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> innerWidth <span class="token operator">/</span> innerHeight<span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    camera<span class="token punctuation">.</span>current<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Set the stage with a scene</span>\n    scene<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Create a cube and its look and feel</span>\n    <span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoxGeometry</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MeshNormalMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    mesh<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    scene<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Cleanup after ourselves on unmount</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      scene<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      mesh<span class="token punctuation">.</span>current<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      mesh<span class="token punctuation">.</span>current<span class="token punctuation">.</span>material<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      renderer<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      renderer<span class="token punctuation">.</span><span class="token function">forceContextLoss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      renderer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Handle animation</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// Only animate for no-preference</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prefersReducedMotion<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      renderer<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">setAnimationLoop</span><span class="token punctuation">(</span><span class="token parameter">time</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        mesh<span class="token punctuation">.</span>current<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">+=</span> time <span class="token operator">/</span> <span class="token number">2000</span><span class="token punctuation">;</span>\n        mesh<span class="token punctuation">.</span>current<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">+=</span> time <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n\n        renderer<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span>current<span class="token punctuation">,</span> camera<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      renderer<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span>current<span class="token punctuation">,</span> camera<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// Cleanup the animation loop, if present</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      renderer<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">setAnimationLoop</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>prefersReducedMotion<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-hidden</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>canvas<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}})),Object(t.b)("p",null,Object(t.b)("img",{parentName:"p",src:"accessible-three-scene.mp4",alt:"A ThreeJS scene, featuring a cube that reacts to devices' accessibility settings."})),Object(t.b)("p",null,"We can control whether the scene is animated with the ",Object(t.b)("inlineCode",{parentName:"p"},"usePrefersReducedMotion")," hook."),Object(t.b)("p",null,"This hook is plug-and-play, so you can connect this to any component or within other hooks."),Object(t.b)("h2",{id:"conclusion"},"Conclusion"),Object(t.b)("p",null,"Not everyone experiences things the same way, and we need to be mindful of that in our work."),Object(t.b)("p",null,"With the ",Object(t.b)("inlineCode",{parentName:"p"},"prefers-reduced-motion")," media query and ",Object(t.b)("inlineCode",{parentName:"p"},"usePrefersReducedMotion")," React hook, we can create truly exciting, mindful experiences."))}o.isMDXComponent=!0;const c=(n={})=>[{id:"css-implementation",level:2,title:"CSS Implementation",children:[]},{id:"javascript-hook",level:2,title:"JavaScript Hook",children:[]},{id:"javascript-implementation",level:2,title:"JavaScript Implementation",children:[]},{id:"conclusion",level:2,title:"Conclusion",children:[]}],u={slug:"accessible-motion-design-for-the-web",title:"Accessible Motion Design for the Web",description:"Motion design is a critical component of user experience, but not all enjoy animations equally.",banner:"accessible-three-scene.mp4",bannerPlaceholder:"accessible-three-scene-placeholder.jpg",bannerAlt:"A ThreeJS scene, featuring a cube that reacts to devices' accessibility settings.",tags:["development","design","accessiblity"],date:"2020-08-10T00:00:00.000Z",readTime:"00:03:00:00"}}}]);
//# sourceMappingURL=19.c0a266bf.chunk.js.map