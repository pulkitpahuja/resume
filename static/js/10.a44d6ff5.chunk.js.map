{"version":3,"sources":["pages/404/index.js","components/DecoderText/index.js"],"names":["NotFound","className","tag","name","content","appear","in","timeout","onEnter","reflow","status","classNames","level","aria-hidden","as","text","start","delay","secondary","iconHoverShift","href","icon","autoPlay","muted","loop","playsInline","poster","notFoundPoster","src","notFound","type","target","rel","glyphs","CharType","DecoderText","startDelay","rest","output","useRef","value","container","reduceMotion","usePrefersReducedMotion","useEffect","containerInstance","current","split","animation","renderOutput","characterMap","map","item","innerHTML","join","springValue","position","index","rand","Math","floor","random","length","shuffle","prerender","chain","spring","from","to","stiffness","damping","stop","ref","memo"],"mappings":"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","file":"static/js/10.a44d6ff5.chunk.js","sourcesContent":["import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { Helmet } from 'react-helmet';\nimport { Button } from 'components/Button';\nimport DecoderText from 'components/DecoderText';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport { reflow } from 'utils/transition';\nimport notFound from 'assets/notfound.mp4';\nimport notFoundPoster from 'assets/notfound.jpg';\nimport './index.css';\n\nconst NotFound = () => (\n  <section className=\"page-404\">\n    <Helmet>\n      <title tag=\"title\">404 | Not Found</title>\n      <meta name=\"description\" content=\"404 page not found. This page doesn't exist\" />\n    </Helmet>\n    <Transition appear in={true} timeout={0} onEnter={reflow}>\n      {status => (\n        <Fragment>\n          <div className=\"page-404__details\">\n            <div className=\"page-404__text\">\n              <Heading\n                className={classNames('page-404__title', `page-404__title--${status}`)}\n                level={0}\n              >\n                404\n              </Heading>\n              <Heading\n                aria-hidden\n                className={classNames(\n                  'page-404__subheading',\n                  `page-404__subheading--${status}`\n                )}\n                as=\"h2\"\n                level={3}\n              >\n                <DecoderText\n                  text=\"Error: Redacted\"\n                  start={status !== 'exited'}\n                  delay={300}\n                />\n              </Heading>\n              <Text\n                className={classNames(\n                  'page-404__description',\n                  `page-404__description--${status}`\n                )}\n              >\n                This page could not be found. It either doesn’t exist or was deleted.\n              </Text>\n              <Button\n                secondary\n                iconHoverShift\n                className={classNames('page-404__button', `page-404__button--${status}`)}\n                href=\"/\"\n                icon=\"chevronRight\"\n              >\n                Back to homepage\n              </Button>\n            </div>\n          </div>\n\n          <div\n            className={classNames(\n              'page-404__video-container',\n              `page-404__video-container--${status}`\n            )}\n          >\n            <video\n              autoPlay\n              muted\n              loop\n              playsInline\n              className={classNames('page-404__video', `page-404__video--${status}`)}\n              poster={notFoundPoster}\n            >\n              <source src={notFound} type=\"video/mp4\" />\n            </video>\n            <a\n              className={classNames('page-404__credit', `page-404__credit--${status}`)}\n              href=\"https://twitter.com/ruinergame\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Animation from Ruiner\n            </a>\n          </div>\n        </Fragment>\n      )}\n    </Transition>\n  </section>\n);\n\nexport default NotFound;\n","import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport './index.css';\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphs.length);\n      return { type: CharType.Glyph, value: glyphs[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n"],"sourceRoot":""}